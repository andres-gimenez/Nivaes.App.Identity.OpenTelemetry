// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package oteldemo;

option go_package = "genproto/oteldemo";

// ---------------Product Catalog----------------

service ProductCatalogService {
    rpc ListProducts(Empty) returns (ListProductsResponse) {}
    rpc GetProduct(GetProductRequest) returns (Product) {}
    rpc SearchProducts(SearchProductsRequest) returns (SearchProductsResponse) {}
}

message Product {
    string id = 1;
    string name = 2;
    string description = 3;
    string picture = 4;
    Money price_usd = 5;

    // Categories such as "clothing" or "kitchen" that can be used to look up
    // other related products.
    repeated string categories = 6;
}

message ListProductsResponse {
    repeated Product products = 1;
}

message GetProductRequest {
    string id = 1;
}

message SearchProductsRequest {
    string query = 1;
}

message SearchProductsResponse {
    repeated Product results = 1;
}

// ---------------Shipping Service----------

service ShippingService {
    rpc GetQuote(GetQuoteRequest) returns (GetQuoteResponse) {}
    rpc ShipOrder(ShipOrderRequest) returns (ShipOrderResponse) {}
}

message GetQuoteRequest {
    Address address = 1;
    repeated CartItem items = 2;
}

message GetQuoteResponse {
    Money cost_usd = 1;
}

message ShipOrderRequest {
    Address address = 1;
    repeated CartItem items = 2;
}

message ShipOrderResponse {
    string tracking_id = 1;
}

message Address {
    string street_address = 1;
    string city = 2;
    string state = 3;
    string country = 4;
    string zip_code = 5;
}

// -------------Email service-----------------

service EmailService {
    rpc SendOrderConfirmation(SendOrderConfirmationRequest) returns (Empty) {}
}

message OrderItem {
    CartItem item = 1;
    Money cost = 2;
}

message OrderResult {
    string   order_id = 1;
    string   shipping_tracking_id = 2;
    Money shipping_cost = 3;
    Address  shipping_address = 4;
    repeated OrderItem items = 5;
}

message SendOrderConfirmationRequest {
    string email = 1;
    OrderResult order = 2;
}

// ------------Ad service------------------

message AdRequest {
    // List of important key words from the current page describing the context.
    repeated string context_keys = 1;
}

message AdResponse {
    repeated Ad ads = 1;
}

message Ad {
    // url to redirect to when an ad is clicked.
    string redirect_url = 1;

    // short advertisement text to display.
    string text = 2;
}

// ------------Feature flag service------------------

service FeatureFlagService {
  rpc GetFlag(GetFlagRequest) returns (GetFlagResponse) {}
  rpc CreateFlag(CreateFlagRequest) returns (CreateFlagResponse) {}
  rpc UpdateFlag(UpdateFlagRequest) returns (UpdateFlagResponse) {}
  rpc ListFlags(ListFlagsRequest) returns (ListFlagsResponse) {}
  rpc DeleteFlag(DeleteFlagRequest) returns (DeleteFlagResponse) {}
}

message Flag {
  string name = 1;
  string description = 2;
  bool enabled = 3;
}

message GetFlagRequest {
  string name = 1;
}

message GetFlagResponse {
  Flag flag = 1;
}

message CreateFlagRequest {
  string name = 1;
  string description = 2;
  bool enabled = 3;
}

message CreateFlagResponse {
  Flag flag = 1;
}

message UpdateFlagRequest {
  string name = 1;
  bool enabled = 2;
}

message UpdateFlagResponse {}

message ListFlagsRequest {}

message ListFlagsResponse {
  repeated Flag flag = 1;
}

message DeleteFlagRequest {
  string name = 1;
}

message DeleteFlagResponse {}
